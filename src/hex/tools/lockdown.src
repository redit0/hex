lockdownHelp = function(self)
    text = g.const.ni + g.l3("Usage:","u") + g.const.ni
    text = text + g.g2(self.name) + g.l2(" Secures the system by changing permissions on all files and folders to u-rwx, g-rwx, o-rwx. If this is your home system, it leaves the ability to run terminal, sudo, mail, map, chat, settings, and manual. Also deletes all files named Mail.txt, Bank.txt, and passwd.") + g.const.ni
    text = text + g.g2(self.name) + g.b3(" [-h/help]") + g.l2(" Displays this help text") + g.const.nl

    print(text)
end function

setPerms = function(obj)
    result = obj.chmod("u-rwx")
    if result != "" then print(g.error(result))
    result = obj.chmod("g-rwx")
    if result != "" then print(g.error(result))
    result = obj.chmod("o-rwx")
    if result != "" then print(g.error(result))
end function

setHomePerms = function(obj)
    result = obj.chmod("u+rx")
    if result != "" then print(g.error(result))
    result = obj.chmod("g+rx")
    if result != "" then print(g.error(result))
end function

doLockdown = function(dir, home, excludes)
    print(g.const.indent + g.l2("Locking " + dir.path + "..."))

    setPerms(dir)

    for folder in dir.get_folders
        doLockdown(folder, home, excludes)
    end for

    for file in dir.get_files
        if file.name == "Mail.txt" or file.name == "Bank.txt" or (file.name == "passwd" and file.path != "/bin/passwd") then
            print(g.const.indent + g.o1("Deleting " + file.path + "..."))
            result = file.delete
            if result != "" then
                print(g.error(result))
            else
                continue
            end if
        end if

        if home and typeof(excludes.indexOf(file.name)) != "number" then
            setPerms(file)
        else if home and typeof(excludes.indexOf(file.name)) == "number" then
            setPerms(file)
            setHomePerms(file)
        else
            setPerms(file)
        end if
    end for

    return
end function

lockdown = function(args = null)
    if args != null and args.len > 0 then
        if args[0] == "help" or args[0] == "-h" then
            self.help
            return
        end if
    end if

    idx = g.context.index

    excludes = ["sudo","Terminal","Terminal.exe","Mail","Mail.exe","Map","Map.exe","Chat","Chat.exe","Settings.exe","Manual","Manual.exe"]

    file = g.stack[idx].file
    comp = g.stack[idx].comp

    guest = file.getGuestFolder

    if (guest != null) then
            print(g.const.indent + g.o1("Deleting guest directory..."))
            result = guest.delete
            if result != "" then print(g.error(result))
    end if

    home = 0

    if comp != null then
        procs = comp.show_procs.split(char(10))

        for proc in procs
            name = proc.split(" ")[4]

            if name == "Xorg" then home = 1
        end for
    end if

    root = file.getRootFolder

    if (home) then print(g.const.indent + g.b3("Home computer detected...") + g.const.nl)

    doLockdown(root, home, excludes)

    print(g.const.ni + g.g2("System locked down."))
    wait(3)
    g.tools.clear.exec
    return
end function

// Fill out the parts of this template, and then place it in the a folder called 'tools' in the same directory as the main hex binary file.
// You can leave it as src code (name it with a .src file extension), otherwise hex will attempt to load it as a binary file that has been built with the
// 'allow import' flag set.

g.tools.lockdown = {
    "name": "lockdown",         // Unformatted tool name text
    "text": g.s2("lockdown"),    // Tool name text with any formatting you want to use when its name is displayed
    "sortOrder": 500,           // This number will be used to sort this tool in the menu.  Quit is the last built-in item, with sort order 999.
    "exec": @lockdown,          // A function reference to the toolName function above.
    "help": @lockdownHelp,      // A function reference to the help function above.
    "data": {}                  // This map can be used to store any data or additional functions used by the tool that might need to be accessed outside of the tool itself.
}