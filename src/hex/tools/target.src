targetHelp = function()
    text = g.const.ni + "Usage:".yellow("u") + g.const.ni
    text = text + g.func.green(self.name) + " " + g.func.cyan("{-s/show}") + " " + g.func.lightgray("Displays the currently saved " + g.const.targettext + ".") + g.const.ni
    text = text + g.func.green(self.name) + " " + g.func.cyan("[ip] {port}") + " " + g.func.lightgray("Sets the " + g.const.targettext + " ip address and/or port to the specified values.  If port is omitted and not already set, it will be set to 0.") + g.const.ni
    text = text + g.func.green(self.name) + " " + g.func.cyan("[port]") + " " + g.func.lightgray("Sets the " + g.const.targettext + " port to the specified value.") + g.const.ni
    text = text + g.func.green(self.name) + " " + g.func.cyan("[-h/help]") + " " + g.func.lightgray("Display this help text") + g.const.nl

    print(text)
end function

g.target.print = function()
    if not g.target.hasIndex("ip") or not is_valid_ip(g.target.ip) then
        print(g.const.indent + g.func.error("There is currently no saved " + g.const.targettext + "."))
        return
    end if

    if not g.target.hasIndex("port") or not g.target.port isa number or g.target.port < 0 or g.target.port > 65535 then g.target.port = 0

    print(g.func.green(g.const.indent + "The current " + g.const.targettext + " is: " + g.target.ip + ":" + g.target.port))
end function

target = function(args)
    if args.len > 2 then
        self.help
        return
    end if

    if args.len == 2 then
        if is_valid_ip(args[0]) then
            g.target.ip = args[0]
        else
            print(g.const.indent + g.func.error("Invalid argument: " + args[0]))
            return
        end if

        if args[1] isa number and args[1].to_int >= 0 and args[1].to_int <= 65535 then
            g.target.port = args[1].to_int
        else
            print(g.const.indent + g.func.error("Invalid argument: " + args[1]))
            return
        end if

        g.target.print
        return
    end if

    if args.len == 1 then
        if args[0] == "-h" or args[0] == "help" then
            self.help
            return
        else if is_valid_ip(args[0]) then
            g.target.ip = args[0]
            g.target.print
            return
        else if args[0] isa number and args[0].to_int >= 0 and args[0].to_int <= 65535 then
            g.target.port = args[0].to_int
            g.target.print
            return
        else if args[0] == "-s" or args[0] == "show" then
            g.target.print
            return
        else
            print(g.const.indent + g.func.error("Invalid argument: " + args[0]))
            return
        end if
    end if

    if args.len == 0 then
        g.target.print
        return
    end if
end function

g.tools.target = {
    "name": "target",
    "text": g.const.targettext,
    "sortOrder": 990,
    "exec": @target,
    "help": @targetHelp,
    "data": {}
}