sudoHelp = function()
    text = g.const.ni + g.l3("Usage:","u") + g.const.ni
    text = text + g.g2(self.name) + g.l2(" (Not Implimented) Attempts to get a root shell using several methods.  May take several minutes.") + g.const.nl
    text = text + g.g2(self.name) + g.b3(" [password]") + g.l2(" Attempts to get a root shell using the provided password.") + g.const.nl
    text = text + g.g2(self.name) + g.b3(" [-h/help]") + g.l2(" Displays this help text") + g.const.nl

    print(text)
end function

doSudo = function(args = null)
    if args != null and args.len == 1 then
        if args[0] == "help" or args[0] == "-h" then
            self.help
            return 0
        else
            password = args[0]

            src = "g = get_custom_object" + char(10) + "g.result = get_shell(""root"",""" + @password + """)"
            g.func.run(src)

            if not g.hasIndex("result") or g.result == null then
                print g.error("Attempted to escalate using get_shell unsuccessfully.")
                return 0
            end if

            result = g.result
            g.remove("result")

            if typeof(result) == "string" then
                print g.error("Error: " + @result)
                return 0
            end if

            if typeof(result) != "shell" then
                print g.error("Error: Expected a shell, got " + typeof(result) + ".")
                return 0
            end if

            source = g.stack[g.context.index].source
            ctx = result.createContext(source)
            g.stack.add(ctx)
            return 1
        end if
    else if args == null or args.len == 0 then
        print g.error("Not implemented.")
        return 0
    else
        self.help
        return 0
    end if
end function

g.util.su = {
    "name": "su",
    "shortDescription": "Privilege Escalation to root.",
    "exec": @doSudo,
    "help": @sudoHelp,
    "data": {}
}